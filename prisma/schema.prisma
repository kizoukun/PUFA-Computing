// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
   provider = "prisma-client-js"
}

datasource db {
   provider = "postgresql"
   url      = env("DATABASE_URL")
}

model Merch {
   id          String   @id @default(uuid())
   title       String
   description String
   price       Float
   createdAt   DateTime @default(now())
   updatedAt   DateTime @default(now()) @updatedAt

   MerchImage MerchImage[]
   MerchSize  MerchSize[]
   MerchColor MerchColor[]
}

model MerchImage {
   id       Int    @id @default(autoincrement())
   merchId  String
   imageUrl String
   merch    Merch  @relation(fields: [merchId], references: [id])
}

model MerchSize {
   id      Int    @id @default(autoincrement())
   size    String
   merchId String
   merch   Merch  @relation(fields: [merchId], references: [id])
}

model MerchColor {
   id      Int    @id @default(autoincrement())
   color   String
   merchId String
   merch   Merch  @relation(fields: [merchId], references: [id])
}

model Project {
   id          String   @id @default(uuid())
   title       String
   description String
   major       String
   teamName    String?
   teamMembers String[]
   batch       String
   codeLink    String
   accepted    Boolean  @default(false)
   createdAt   DateTime @default(now())
   updatedAt   DateTime @default(now()) @updatedAt

   ProjectImage ProjectImage[]
}

model ProjectImage {
   id        Int     @id @default(autoincrement())
   projectId String
   imageUrl  String
   project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model Aspiration {
   id             String           @id @default(uuid())
   to             String
   from           String
   anonymous      Boolean          @default(false)
   subject        String
   message        String
   adminResponse  String?
   createdAt      DateTime         @default(now())
   updatedAt      DateTime         @default(now()) @updatedAt
   AspirationLike AspirationLike[]
}

model AspirationLike {
   id           Int        @id @default(autoincrement())
   aspirationId String
   userEmail    String
   aspiration   Aspiration @relation(fields: [aspirationId], references: [id], onDelete: Cascade)
}

model Users {
   id             String       @id @default(uuid())
   password       String
   email          String       @unique
   firstName      String
   lastName       String
   studentId      String       @unique
   majorId        Int
   major          Organization @relation(fields: [majorId], references: [id])
   profilePicture String?
   dateOfBirth    DateTime?
   yearOfBatch    String
   createAt       DateTime     @default(now())
   updateAt       DateTime     @default(now()) @updatedAt
}

model Organization {
   id          Int      @id @default(autoincrement())
   uniqueId    String   @unique
   name        String
   description String
   logo        String
   createdAt   DateTime @default(now())
   updatedAt   DateTime @default(now()) @updatedAt

   Users Users[]
}
